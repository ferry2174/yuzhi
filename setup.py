import re
import shutil
from pathlib import Path

from setuptools import Command, find_packages, setup


stale_egg_info = Path(__file__).parent / "yuzhi.egg-info"
if stale_egg_info.exists():
    print(
        (
            "Warning: {} exists.\n\n"
            "This directory is automatically generated by Python's packaging tools.\n"
            "I will remove it now.\n\n"
            "See https://github.com/pypa/pip/issues/5466 for details.\n"
        ).format(stale_egg_info)
    )
    shutil.rmtree(stale_egg_info)

# IMPORTANT:
# 1. all dependencies should be listed here with their version requirements if any
# 2. once modified, run: `make deps_table_update` to update src/yuzhi/dependency_versions_table.py
_deps = [
    "python>=3.10.0",
    "numpy>=1.26.0,<2.0.0",
    "pandas>=2.2.2",
    "tqdm>=4.66.5",
    "oneflow>=0.9.0",
    "pytest>=8.3.2",
    "pytest-xdist>=3.6.1",
    "torch<2.4.0,>=2.2.0",
    "ruff>=0.5.7",
    "bitsandbytes>=0.43.3",
    "nvidia-cudnn-cu12<9.0.0.0,>=8.9.0.0",
    "safetensors>=0.4.0",
    "sentencepiece>=0.2.0",
    "tokenizers>=0.11.6",
    "einops==0.8.0",
    "timm==0.9.16",
    "flash-attn==2.5.8",
]

deps = {b: a for a, b in (re.findall(r"^(([^!=<>~ ]+)(?:[!=<>~ ].*)?$)", x)[0] for x in _deps)}

def deps_list(*pkgs):
    return [deps[pkg] for pkg in pkgs]

class DepsTableUpdateCommand(Command):
    """
    A custom distutils command that updates the dependency table.
    usage: python setup.py deps_table_update
    """

    description = "build runtime dependency table"
    user_options = [
        # format: (long option, short option, description).
        ("dep-table-update", None, "updates src/yuzhi/dependency_versions_table.py"),
    ]

    def initialize_options(self):
        pass

    def finalize_options(self):
        pass

    def run(self):
        entries = "\n".join([f'    "{k}": "{v}",' for k, v in deps.items()])
        content = [
            "# THIS FILE HAS BEEN AUTOGENERATED. To update:",
            "# 1. modify the `_deps` dict in setup.py",
            "# 2. run `make deps_table_update``",
            "deps = {",
            entries,
            "}",
            "",
        ]
        target = "src/yuzhi/dependency_versions_table.py"
        print(f"updating {target}")
        with open(target, "w", encoding="utf-8", newline="\n") as f:
            f.write("\n".join(content))

extras = {}

extras["testing"] = deps_list("pytest", "pytest-xdist")

extras["quantization"] = deps_list("bitsandbytes")

extras["oneflow"] = deps_list("oneflow", "nvidia-cudnn-cu12")

extras["torch"] = deps_list("nvidia-cudnn-cu12")

extras["tokenizer"] = deps_list("sentencepiece")

extras["model_monkey"] = deps_list("einops", "timm", "flash-attn")

print(extras)

install_requires = deps_list("numpy", "pandas", "tqdm", "torch", "safetensors", "tokenizers")

setup(
    name="yuzhi",
    version="0.0.1",
    author="Dadbear",
    author_email="4498237@qq.com",
    description="copy from huggingface/transformers, for learning. use oneflow instead of pytorch for the default backend.",
    long_description=open("README.md", "r", encoding="utf-8").read(),
    long_description_content_type="text/markdown",
    keywords="NLP vision speech deep learning transformer pytorch tensorflow oneflow BERT GPT-2 Wav2Vec2 ViT",
    license="MIT License",
    url="https://github.com/ferry2174/yuzhi",
    package_dir={"": "src"},
    packages=find_packages("src"),
    include_package_data=True,
    package_data={"": ["**/*.cu", "**/*.cpp", "**/*.cuh", "**/*.h", "**/*.pyx"]},
    zip_safe=False,
    extras_require=extras,
    entry_points={"console_scripts": ["transformers-cli=transformers.commands.transformers_cli:main"]},
    python_requires=">=3.10.14",
    install_requires=list(install_requires),
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Intended Audience :: Education",
        "Intended Audience :: Science/Research",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.10",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ],
    cmdclass={"deps_table_update": DepsTableUpdateCommand},
)
